cpu										gpu
	mesh									mesh
		block (MESH)							block (MESH)
			vertices (Array) [x,y,z,s,t]			vertices (GL_ARRAY_BUFFER) -> 1
			indices (Array)	[v1,v2,v3]				indices (GL_ARRAY_ELEMENT_BUFFER) -> 1
		mesh2 (MESH)							mesh2 (MESH)
			vertices (Array) [x,y,z,s,t]					vertices (GL_ARRAY_BUFFER) -> 2
			indices (Array)	[v1,v2,v3]				indices (GL_ARRAY_ELEMENT_BUFFER) -> 2

	imgs									txtr
		image1 (TEXTURE)						image1 (TEXTURE)
			source (String) [PATH]					texels (GL_ARRAY) -> 1
			texels (Array) [00112233]
		image2 (TEXTURE)						image2 (TEXTURE)
			source (String) [PATH]					texels (GL_ARRAY) -> 2
			texels (Array) [00112233]

	glsl									glsl
		defaults (SHADER)						defaults (SHADER)
			vertex (String)	[CODE]					vertex (GL_VERTEX_SHADER) -> 1
			fragment (String) [CODE]				fragment (GL_FRAGMENT_SHADER) -> 2
		custom (SHADER)						custom (SHADER)
			vertex (String)	[CODE]					vertex (GL_VERTEX_SHADER) -> 3

	prgm									prgm
		defaults (PROGRAM)						defaults (PROGRAM)
			vertex (String) -> "defaults"			build (GLprogram) -> 1
			fragment (String) -> "defaults"					
		custom (PROGRAM)						custom (PROGRAM)
			vertex (String) -> "defaults"			build (GLprogram) -> 2
			fragment (String) -> "custom"

	mdl3									mdl3
		globalblock1							globalblock1
			program -> ["defaults"]					program -> * prgm.defaults
			mesh -> ["block"]						mesh -> * mesh.block
			image -> ["image1"]						texture -> * txtr.image1

			x,y,z	-> [0,0,0]						translation (GLmat4) -> __
			X,Y,Z -> [0,0,0]						rotation (GLmat4) -> __
			w,h,l -> [1,1,1]						scale (GLmat4) -> __



	data
		images
			ratio1
				image1 (pointer) imgs.image1
			ratio2
				image2 (pointer) imgs.image2
